[{"G:\\React_js\\react_ts\\src\\index.tsx":"1","G:\\React_js\\react_ts\\src\\reportWebVitals.ts":"2","G:\\React_js\\react_ts\\src\\App.tsx":"3","G:\\React_js\\react_ts\\src\\TextInput.tsx":"4","G:\\React_js\\react_ts\\src\\Counter.tsx":"5","G:\\React_js\\react_ts\\src\\components\\Card.tsx":"6","G:\\React_js\\react_ts\\src\\components\\API.ts":"7","G:\\React_js\\react_ts\\src\\components\\utils.ts":"8"},{"size":500,"mtime":1607666545990,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1607666545990,"results":"11","hashOfConfig":"10"},{"size":3320,"mtime":1608800984738,"results":"12","hashOfConfig":"10"},{"size":782,"mtime":1608661182249,"results":"13","hashOfConfig":"10"},{"size":348,"mtime":1608661815833,"results":"14","hashOfConfig":"10"},{"size":1375,"mtime":1608802122328,"results":"15","hashOfConfig":"10"},{"size":836,"mtime":1608790794888,"results":"16","hashOfConfig":"10"},{"size":94,"mtime":1608788724245,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17k3bih",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"G:\\React_js\\react_ts\\src\\index.tsx",[],["37","38"],"G:\\React_js\\react_ts\\src\\reportWebVitals.ts",[],"G:\\React_js\\react_ts\\src\\App.tsx",["39","40"],"G:\\React_js\\react_ts\\src\\TextInput.tsx",["41","42"],"import React, { useState, useRef } from \"react\";\r\ninterface Props {\r\n  text: string;\r\n  digits: number;\r\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\ninterface hooks {\r\n  text: string;\r\n  value?: number;\r\n  // ? adds optional value\r\n}\r\nconst TextInput: React.FC<Props> = (Props) => {\r\n  const [info, setInfo] = useState<hooks>({ text: \"helo\" });\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  //pro tip to use use ref\r\n\r\n  return (\r\n    <div>\r\n      <button>INCREASE</button>\r\n      {/* <input type=\"text\" placeholder=\"enter your text\" /> */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"enter your ref\"\r\n        ref={inputRef}\r\n        onChange={Props.handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n",["43","44"],"G:\\React_js\\react_ts\\src\\Counter.tsx",[],"G:\\React_js\\react_ts\\src\\components\\Card.tsx",["45","46"],"G:\\React_js\\react_ts\\src\\components\\API.ts",[],"G:\\React_js\\react_ts\\src\\components\\utils.ts",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":5,"column":18,"nodeType":"53","messageId":"54","endLine":5,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":103,"column":1,"nodeType":"57","messageId":"58","endLine":117,"endColumn":2},{"ruleId":"51","severity":1,"message":"59","line":14,"column":10,"nodeType":"53","messageId":"54","endLine":14,"endColumn":14},{"ruleId":"51","severity":1,"message":"60","line":14,"column":16,"nodeType":"53","messageId":"54","endLine":14,"endColumn":23},{"ruleId":"47","replacedBy":"61"},{"ruleId":"49","replacedBy":"62"},{"ruleId":"51","severity":1,"message":"63","line":2,"column":10,"nodeType":"53","messageId":"54","endLine":2,"endColumn":16},{"ruleId":"51","severity":1,"message":"52","line":2,"column":18,"nodeType":"53","messageId":"54","endLine":2,"endColumn":22},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.",["64"],["65"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]