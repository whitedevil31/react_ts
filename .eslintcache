[{"G:\\React_js\\react_ts\\src\\index.tsx":"1","G:\\React_js\\react_ts\\src\\reportWebVitals.ts":"2","G:\\React_js\\react_ts\\src\\App.tsx":"3","G:\\React_js\\react_ts\\src\\TextInput.tsx":"4","G:\\React_js\\react_ts\\src\\Counter.tsx":"5","G:\\React_js\\react_ts\\src\\components\\Card.tsx":"6","G:\\React_js\\react_ts\\src\\components\\API.ts":"7","G:\\React_js\\react_ts\\src\\components\\utils.ts":"8","G:\\React_js\\react_ts\\src\\App.styles.ts":"9"},{"size":500,"mtime":1607666545990,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1607666545990,"results":"12","hashOfConfig":"11"},{"size":3138,"mtime":1608797990191,"results":"13","hashOfConfig":"11"},{"size":782,"mtime":1608661182249,"results":"14","hashOfConfig":"11"},{"size":348,"mtime":1608661815833,"results":"15","hashOfConfig":"11"},{"size":839,"mtime":1608794475705,"results":"16","hashOfConfig":"11"},{"size":836,"mtime":1608790794888,"results":"17","hashOfConfig":"11"},{"size":94,"mtime":1608788724245,"results":"18","hashOfConfig":"11"},{"size":370,"mtime":1608797289796,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"17k3bih",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"G:\\React_js\\react_ts\\src\\index.tsx",[],["43","44"],"G:\\React_js\\react_ts\\src\\reportWebVitals.ts",[],"G:\\React_js\\react_ts\\src\\App.tsx",["45"],"G:\\React_js\\react_ts\\src\\TextInput.tsx",["46","47"],"import React, { useState, useRef } from \"react\";\r\ninterface Props {\r\n  text: string;\r\n  digits: number;\r\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\ninterface hooks {\r\n  text: string;\r\n  value?: number;\r\n  // ? adds optional value\r\n}\r\nconst TextInput: React.FC<Props> = (Props) => {\r\n  const [info, setInfo] = useState<hooks>({ text: \"helo\" });\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  //pro tip to use use ref\r\n\r\n  return (\r\n    <div>\r\n      <button>INCREASE</button>\r\n      {/* <input type=\"text\" placeholder=\"enter your text\" /> */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"enter your ref\"\r\n        ref={inputRef}\r\n        onChange={Props.handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n",["48","49"],"G:\\React_js\\react_ts\\src\\Counter.tsx",[],"G:\\React_js\\react_ts\\src\\components\\Card.tsx",[],"G:\\React_js\\react_ts\\src\\components\\API.ts",[],"G:\\React_js\\react_ts\\src\\components\\utils.ts",[],["50","51"],"G:\\React_js\\react_ts\\src\\App.styles.ts",["52","53"],"import { create } from \"domain\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport BG from \"./images/bg.jpg\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml{height:100%}\r\nbody{background-image:url(${BG});background-size:cover;margin:0;padding:0 20px;display:flex;justify-content:center}\r\n*{box-size:border-box}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n`;\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":96,"column":1,"nodeType":"60","messageId":"61","endLine":110,"endColumn":2},{"ruleId":"62","severity":1,"message":"63","line":14,"column":10,"nodeType":"64","messageId":"65","endLine":14,"endColumn":14},{"ruleId":"62","severity":1,"message":"66","line":14,"column":16,"nodeType":"64","messageId":"65","endLine":14,"endColumn":23},{"ruleId":"54","replacedBy":"67"},{"ruleId":"56","replacedBy":"68"},{"ruleId":"54","replacedBy":"69"},{"ruleId":"56","replacedBy":"70"},{"ruleId":"62","severity":1,"message":"71","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":16},{"ruleId":"62","severity":1,"message":"72","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","@typescript-eslint/no-unused-vars","'info' is assigned a value but never used.","Identifier","unusedVar","'setInfo' is assigned a value but never used.",["73"],["74"],["73"],["74"],"'create' is defined but never used.","'styled' is defined but never used.","no-global-assign","no-unsafe-negation"]